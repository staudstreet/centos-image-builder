#!/bin/bash -e
PLATFORM=$(uname)
INISO=debian-net.iso
OUTISO=debian-preseed.iso
SEED=debianvm.seed
PUBKEY=id_rsa.pub

DEV=sda
KEYMAP=at
HOST=VM-$(uuidgen)
DOMAIN=int.rbrk.at
PWROOT=toor
USER=api
PWUSER=api

#updates & init
#if [ "$PLATFORM" = "Darwin" ]; then
	# os x
#	brew install xorriso
#else
	# debian & ubuntu
#	sudo apt-get update -y
	#sudo apt-get upgrade -y
#	sudo apt-get install -y syslinux-utils libarchive-tools m4 xorriso uuid-runtime
#fi

#unpack iso
echo "Unpacking ISO."
mkdir workdir
bsdtar -C workdir/ -xf $INISO

#build isohybrid-mbr
dd if=$INISO of=isohdpfx.bin bs=1 count=432

#inject assets
echo "Injecting assets."
sudo cp "assets/auto_resize_vda.sh" "workdir/"
sudo cp "secrets/$PUBKEY" "workdir/$PUBKEY"
sudo m4 \
	-D __KEYMAP__="$KEYMAP" \
	"assets/isolinux.cfg" > "workdir/isolinux/isolinux.cfg"
sudo m4 \
	-D __HOST__="$HOST" \
	-D __DOMAIN__="$DOMAIN" \
	-D __PWROOT__="$PWROOT" \
	-D __USER__="$USER" \
	-D __PWUSER__="$PWUSER" \
	-D __DEV__="$DEV" \
	"assets/$SEED" > "workdir/preseed.cfg"

sudo m4 \
	-D __USER__="$USER" \
	"assets/sudoers.m4" > "workdir/sudoers"

sudo m4 \
	-D __USER__="$USER" \
	-D __PUBLIC_KEY__="$PUBKEY" \
	"assets/late_command.sh.m4" > "workdir/late_command.sh"

#build iso
echo "Repackaging ISO."
sudo xorriso -as mkisofs -r -V 'Debian 10.0.0 amd64 n' -o $OUTISO -J -joliet-long -cache-inodes -isohybrid-mbr isohdpfx.bin \
-b isolinux/isolinux.bin -c isolinux/boot.cat -boot-load-size 4 -boot-info-table -no-emul-boot -eltorito-alt-boot \
-e boot/grub/efi.img -no-emul-boot -isohybrid-gpt-basdat -isohybrid-apm-hfsplus workdir/

#cleanup
echo "Cleaning up."
sudo rm -rf workdir
sudo rm isohdpfx.bin

exit 0
